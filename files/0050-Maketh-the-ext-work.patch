From 6753b7782ed2317dc0e2234d36a343fe52251bad Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Sun, 12 Jun 2016 13:40:51 +0100
Subject: [PATCH 50/85] Maketh the ext work

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 os_installer2/diskman.py | 34 ++++++++++++++++++++++++++++++++--
 os_installer2/diskops.py |  8 ++++----
 2 files changed, 36 insertions(+), 6 deletions(-)

diff --git a/os_installer2/diskman.py b/os_installer2/diskman.py
index d4a5ac2..e25a147 100644
--- a/os_installer2/diskman.py
+++ b/os_installer2/diskman.py
@@ -155,12 +155,13 @@ class SystemPartition:
         return self.size
 
     def build_ntfs_space(self):
+        """ Figure out ntfs minimum size """
         cmd = "LANG=C ntfsresize -im --no-action {}".format(self.path)
 
         try:
             o = subprocess.check_output(cmd, shell=True)
         except Exception as ex:
-            print("Cannot scan ntfs: {}".format(ex))
+            print("Cannot resize ntfs: {}".format(ex))
             return
 
         for l in o.split("\n"):
@@ -168,11 +169,35 @@ class SystemPartition:
                 continue
             if "MB" not in l:
                 continue
-            min_size = long(l.split(":")[-1])
+            min_size = long(l.split(":")[-1].strip())
             self.min_size = min_size * 1000 * 1000
             self.resizable = True
             break
 
+    def build_ext_space(self):
+        """ Figure out ext* min size """
+        cmd = "LANG=C resize2fs -P {}".format(self.path)
+
+        try:
+            o = subprocess.check_output(cmd, shell=True)
+        except Exception as ex:
+            print("Cannot resize ext4: {}".format(ex))
+            return
+
+        for l in o.split("\n"):
+            if ":" not in l:
+                continue
+            if "minimum size" not in l:
+                continue
+            min_size = long(l.split(":")[-1].strip())
+            self.min_size = min_size * 4096 / 1024
+
+            # Handle 1/2k blocks
+            if self.min_size < self.usedspace:
+                self.min_size = self.usedspace
+            self.resizable = True
+            break
+
     def __init__(self, partition, mount_point, dm):
         self.partition = partition
         self.path = partition.path
@@ -203,6 +228,11 @@ class SystemPartition:
                 self.build_ntfs_space()
             except Exception as e:
                 print("Undefined error in ntfs: {}".format(e))
+        elif fs.type in ["ext2", "ext", "ext3", "ext4"]:
+            try:
+                self.build_ext_space()
+            except Exception as e:
+                print("Undefined error in ext*: {}".format(e))
 
 
 class SystemDrive:
diff --git a/os_installer2/diskops.py b/os_installer2/diskops.py
index 8bee236..8d39c39 100644
--- a/os_installer2/diskops.py
+++ b/os_installer2/diskops.py
@@ -318,14 +318,14 @@ class DiskOpResizeOS(BaseDiskOp):
             cmd = None
 
             if self.part.fileSystem.type == "ntfs":
-                newSz = str(long(self.their_size))
+                newSz = str(int(self.their_size) / 1000)
 
                 prefix = "/usr/sbin"
                 check_cmd = "{}/ntfsresize -i -f --force -v {} {}".format(
                     prefix,
                     "--no-action" if simulate else "", self.part.path)
 
-                resize_cmd = "{}/ntfsresize {} -f -f -b --size {} {}".format(
+                resize_cmd = "{}/ntfsresize {} -f -f -b --size {}k {}".format(
                     prefix,
                     "--no-action" if simulate else "", newSz, self.part.path)
 
@@ -369,8 +369,8 @@ class DiskOpResizeOS(BaseDiskOp):
                     self.set_errors(ex)
                     return False
 
-                new_size = str(long(self.their_size))
-                cmd = "/sbin/resize2fs {} {}".format(
+                new_size = str(int(self.their_size / 1024))
+                cmd = "/sbin/resize2fs {} {}K".format(
                     self.part.path, new_size)
                 try:
                     subprocess.check_call(cmd, shell=True)
-- 
2.8.3

