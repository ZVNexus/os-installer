From b82ab8b3fd2878654ca3b70f4b696221815bac5c Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Mon, 27 Mar 2017 22:37:07 +0100
Subject: [PATCH 03/37] postinstall: Remove all GRUB_BACKGROUND handling

We now no longer utilise a default background for GRUB in Solus, purely
because its very tacky and hard to get the image placement correct on a
multitude of resolutions. Thus we simplify the GRUB code and let CBM
handle all the heavy lifting.

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 os_installer2/postinstall.py | 47 --------------------------------------------
 1 file changed, 47 deletions(-)

diff --git a/os_installer2/postinstall.py b/os_installer2/postinstall.py
index d100e69..33cb37d 100644
--- a/os_installer2/postinstall.py
+++ b/os_installer2/postinstall.py
@@ -706,51 +706,6 @@ class PostInstallBootloader(PostInstallStep):
                 return True
         return False
 
-    def apply_bios_config(self):
-        """ Rewrite /etc/default/grub for GRUB_CMDLINE """
-        if (not self.is_encrypted_install() and not self.swap_uuid and
-                not self.is_lvm2_install()):
-            return True
-
-        write_splash = False
-        if os.path.exists("/usr/share/backgrounds/splash.tga"):
-            if self.is_lvm2_install():
-                write_splash = True
-
-        # Separate /boot, make the splash.tga available
-        if write_splash:
-            spath = "/usr/share/backgrounds/splash.tga"
-            tt = self.installer.get_installer_target_filesystem()
-            tpath = "{}/boot/grub/splash.tga".format(tt)
-            dpath = os.path.dirname(tpath)
-            try:
-                os.makedirs(dpath, 0o0755)
-                shutil.copy(spath, tpath)
-            except Exception as e:
-                print(e)
-                pass
-
-        # Now, load in, rewrite as we go..
-        lines = []
-        ogrub = os.path.join(self.installer.get_installer_target_filesystem(),
-                             "etc/default/grub")
-        try:
-            with open("/etc/default/grub", "r") as grub_input:
-                for line in grub_input.readlines():
-                    line = line.replace("\n", "").replace("\r", "").strip()
-
-                    if "GRUB_BACKGROUND=" in line and write_splash:
-                        splash_path = "/boot/grub/splash.tga"
-                        line = "GRUB_BACKGROUND=\"{}\"".format(splash_path)
-                    lines.append(line)
-
-            with open(ogrub, "w") as grub_output:
-                grub_output.write("\n".join(lines))
-        except Exception as ex:
-            self.set_errors("Error writing GRUB defaults: {}".format(ex))
-            return False
-        return True
-
     def apply_boot_loader(self):
         """ Invoke clr-boot-manager itself """
         kdir = os.path.join(self.installer.get_installer_target_filesystem(),
@@ -780,8 +735,6 @@ class PostInstallBootloader(PostInstallStep):
         if not self.info.bootloader_install:
             # Still need detecting from other distros
             return self.apply_boot_loader()
-        if not self.apply_bios_config():
-            return False
         cmd = "grub-install --force \"{}\"".format(self.info.bootloader_sz)
         if not self.run_in_chroot(cmd):
             self.set_errors("Failed to install GRUB bootloader")
-- 
2.13.3

