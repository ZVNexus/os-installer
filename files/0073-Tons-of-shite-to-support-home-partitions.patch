From bc070cf2766b7da064463cb37054e33f378fae74 Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Sun, 12 Jun 2016 22:39:07 +0100
Subject: [PATCH 73/80] Tons of shite to support home partitions

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 os_installer2/diskops.py     |  7 +++++--
 os_installer2/mainwindow.py  |  6 +++---
 os_installer2/postinstall.py |  7 ++++++-
 os_installer2/strategy.py    | 13 +++++++++++--
 4 files changed, 25 insertions(+), 8 deletions(-)

diff --git a/os_installer2/diskops.py b/os_installer2/diskops.py
index 51e0397..4ed4adc 100644
--- a/os_installer2/diskops.py
+++ b/os_installer2/diskops.py
@@ -481,15 +481,18 @@ class DiskOpUseHome(BaseDiskOp):
     """ Use an existing home paritition """
 
     home_part = None
+    home_part_fs = None
     path = None
 
-    def __init__(self, device, home_part):
+    def __init__(self, device, home_part, home_part_fs):
         BaseDiskOp.__init__(self, device)
         self.home_part = home_part
         self.path = self.home_part.path
+        self.home_part_fs = home_part_fs
 
     def describe(self):
-        return "Use {} as home partition".format(self.home_part.path)
+        return "Use {} ({}) as home partition".format(self.home_part.path,
+                                                      self.home_part_fs)
 
     def apply(self, disk, simulate):
         """ Can't actually fail here. """
diff --git a/os_installer2/mainwindow.py b/os_installer2/mainwindow.py
index f1dc5d9..ce1cee1 100644
--- a/os_installer2/mainwindow.py
+++ b/os_installer2/mainwindow.py
@@ -23,7 +23,7 @@ from .pages.disk_location import InstallerDiskLocationPage
 from .pages.partitioning import InstallerPartitioningPage
 from .pages.system import InstallerSystemPage
 # from .pages.users import InstallerUsersPage
-# from .pages.summary import InstallerSummaryPage
+from .pages.summary import InstallerSummaryPage
 # from .pages.progress import InstallerProgressPage
 # from .pages.complete import InstallationCompletePage
 import sys
@@ -166,9 +166,9 @@ class MainWindow(Gtk.ApplicationWindow):
             self.add_installer_page(InstallerDiskLocationPage())
             self.add_installer_page(InstallerPartitioningPage())
             self.add_installer_page(InstallerSystemPage())
-            """self.add_installer_page(InstallerUsersPage())
+            """self.add_installer_page(InstallerUsersPage())"""
             self.add_installer_page(InstallerSummaryPage())
-            self.add_installer_page(InstallerProgressPage())
+            """self.add_installer_page(InstallerProgressPage())
             self.add_installer_page(InstallationCompletePage())"""
         except Exception as e:
             print("Fatal error during startup: {}".format(e))
diff --git a/os_installer2/postinstall.py b/os_installer2/postinstall.py
index b2a8491..cf6c66d 100644
--- a/os_installer2/postinstall.py
+++ b/os_installer2/postinstall.py
@@ -14,7 +14,7 @@
 import subprocess
 import os
 from collections import OrderedDict
-from .diskops import DiskOpCreateSwap, DiskOpUseSwap
+from .diskops import DiskOpCreateSwap, DiskOpUseSwap, DiskOpUseHome
 import shutil
 
 
@@ -544,6 +544,11 @@ class PostInstallFstab(PostInstallStep):
         for op in strat.get_operations():
             # TODO: Add custom mountpoints here!
             # Skip swap for GPT/UEFI
+            if isinstance(op, DiskOpUseHome):
+                huuid = get_part_uuid(op.home_part.path)
+                fs = op.home_part_fs
+                i = "UUID={}\t/\t{}\trw,relatime,errors=remount-ro\t0\t0"
+                appends.append(i.format(huuid, fs))
             if disk.type == "gpt" and strat.is_uefi():
                 continue
 
diff --git a/os_installer2/strategy.py b/os_installer2/strategy.py
index 2bc0b00..4910912 100644
--- a/os_installer2/strategy.py
+++ b/os_installer2/strategy.py
@@ -626,6 +626,14 @@ class UserPartitionStrategy(DiskStrategy):
                 if part == path:
                     return drive.device
 
+    def find_format(self, dp, dev):
+        path = dev.path
+        for drive in dp.drives:
+            for part in drive.partitions:
+                print("{} vs {}".format(part, path))
+                if part == path:
+                    return drive.partitions[part].partition.fileSystem.type
+
     def update_operations(self, dm, info):
         if not self.root_part:
             return
@@ -642,10 +650,11 @@ class UserPartitionStrategy(DiskStrategy):
         if self.home_part:
             dev = self.find_device(info.prober, self.home_part)
             if not self.home_format:
-                self.push_operation(DiskOpUseHome(dev, self.home_part))
+                fmt = self.find_format(info.prober, self.home_part)
+                self.push_operation(DiskOpUseHome(dev, self.home_part, fmt))
             else:
                 self.push_operation(DiskOpFormatHome(dev, self.home_part))
-                self.push_operation(DiskOpUseHome(dev, self.home_part))
+                self.push_operation(DiskOpUseHome(dev, self.home_part, "ext4"))
 
 
 class DiskStrategyManager:
-- 
2.8.3

