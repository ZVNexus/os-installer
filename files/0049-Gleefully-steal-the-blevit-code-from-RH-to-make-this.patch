From 1b7bd3593df428746bea9b391cf641d5e9eb9673 Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Sun, 12 Jun 2016 13:14:45 +0100
Subject: [PATCH 49/80] Gleefully steal the blevit code from RH to make this
 work. Ty guys.

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 os_installer2/diskops.py        | 54 ++++++++++++++++++++++++++---------------
 os_installer2/pages/progress.py |  1 -
 2 files changed, 35 insertions(+), 20 deletions(-)

diff --git a/os_installer2/diskops.py b/os_installer2/diskops.py
index 7665e5c..8bee236 100644
--- a/os_installer2/diskops.py
+++ b/os_installer2/diskops.py
@@ -288,6 +288,29 @@ class DiskOpResizeOS(BaseDiskOp):
     def describe(self):
         return self.desc
 
+    def get_size_constraint(self, disk, new_len):
+        """ Gratefully borrowed from blivet, Copyright (C) 2009 Red Hat
+            https://github.com/rhinstaller/blivet/
+        """
+        current_geom = self.part.geometry
+        current_dev = current_geom.device
+        new_geometry = parted.Geometry(device=current_dev,
+                                       start=current_geom.start,
+                                       length=new_len)
+
+        # and align the end sector
+        alignment = disk.partitionAlignment
+        if new_geometry.length < current_geom.length:
+            align = alignment.alignUp
+            align_geom = current_geom  # we can align up into the old geometry
+        else:
+            align = alignment.alignDown
+            align_geom = new_geometry
+
+        new_geometry.end = align(align_geom, new_geometry.end)
+        constraint = parted.Constraint(exactGeom=new_geometry)
+        return (constraint, new_geometry)
+
     def apply(self, disk, simulate):
         try:
             nlen = parted.sizeToSectors(self.their_size,
@@ -320,26 +343,22 @@ class DiskOpResizeOS(BaseDiskOp):
                     self.set_errors(e)
                     return False
 
-                c = parted.Constraint(device=self.device)
-                c_start = self.part.geometry.start
-                c_end = self.part.geometry.start + nlen
+                (c, geom) = self.get_size_constraint(disk, nlen)
                 self.part.disk.setPartitionGeometry(partition=self.part,
                                                     constraint=c,
-                                                    start=c_start,
-                                                    end=c_end)
-                self.new_part_off = c_end
+                                                    start=geom.start,
+                                                    end=geom.end)
+                self.new_part_off = geom.end
                 # All done
                 return True
             elif self.part.fileSystem.type.startswith("ext"):
                 if simulate:
-                    c = parted.Constraint(device=self.device)
-                    c_start = self.part.geometry.start
-                    c_end = self.part.geometry.start + nlen
+                    (c, geom) = self.get_size_constraint(disk, nlen)
                     self.part.disk.setPartitionGeometry(partition=self.part,
                                                         constraint=c,
-                                                        start=c_start,
-                                                        end=c_end)
-                    self.new_part_off = self.part.geometry.end
+                                                        start=geom.start,
+                                                        end=geom.end)
+                    self.new_part_off = geom.end
                     return True
                 # check it first
                 cmd1 = "/sbin/e2fsck -f -p {}".format(self.part.path)
@@ -360,15 +379,12 @@ class DiskOpResizeOS(BaseDiskOp):
                     self.set_errors(ex)
                     return False
 
-                print("Resizing to constraint of {}".format(new_size))
-                c = parted.Constraint(device=self.device)
-                c_start = self.part.geometry.start
-                c_end = self.part.geometry.start + nlen
+                (c, geom) = self.get_size_constraint(disk, nlen)
                 self.part.disk.setPartitionGeometry(partition=self.part,
                                                     constraint=c,
-                                                    start=c_start,
-                                                    end=c_end)
-                self.new_part_off = c_end
+                                                    start=geom.start,
+                                                    end=geom.end)
+                self.new_part_off = geom.end
             else:
                 return False
         except Exception as e:
diff --git a/os_installer2/pages/progress.py b/os_installer2/pages/progress.py
index 1a887c1..adbbd05 100644
--- a/os_installer2/pages/progress.py
+++ b/os_installer2/pages/progress.py
@@ -37,7 +37,6 @@ import stat
 import parted
 import sys
 
-
 # Update 5 times a second, vs every byte copied..
 UPDATE_FREQUENCY = 1000 / 5
 
-- 
2.8.3

