From 0e1aab06101e583af123b397de47b44500b3d285 Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Tue, 28 Mar 2017 00:26:34 +0100
Subject: [PATCH 09/35] postinstall: Write the NV vars last otherwise OVMF/Qemu
 dies

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 os_installer2/postinstall.py | 31 ++++++++++++++++---------------
 1 file changed, 16 insertions(+), 15 deletions(-)

diff --git a/os_installer2/postinstall.py b/os_installer2/postinstall.py
index fbe2fa5..f4c4c81 100644
--- a/os_installer2/postinstall.py
+++ b/os_installer2/postinstall.py
@@ -747,6 +747,22 @@ class PostInstallBootloader(PostInstallStep):
             TODO: In future this will be managed by clr-boot-manager itself,
             we're just ensuring that we write the EFI variables
         """
+        # Tell clr-boot-manager where our ESP is for now
+        try:
+            if not os.path.exists("/dev/disk/by-partlabel"):
+                os.makedirs("/dev/disk/by-partlabel", 00755)
+            if os.path.lexists("/dev/disk/by-partlabel/ESP"):
+                os.remove("/dev/disk/by-partlabel/ESP")
+            os.symlink(self.installer.locate_esp(),
+                       "/dev/disk/by-partlabel/ESP")
+        except Exception as e:
+            self.set_errors("Failed to simulate ESP link: {}".format(e))
+            return False
+
+        # Proxy back to CBM
+        if not self.apply_boot_loader():
+            return False
+
         espt = self.installer.get_esp_target()
         ofile = os.path.join(self.get_efi_dir(espt),
                              "goofiboot/goofibootx64.efi")
@@ -780,21 +796,6 @@ class PostInstallBootloader(PostInstallStep):
             self.set_errors("Failed to install goofiboot")
             return False
 
-        # Tell clr-boot-manager where our ESP is for now
-        try:
-            if not os.path.exists("/dev/disk/by-partlabel"):
-                os.makedirs("/dev/disk/by-partlabel", 00755)
-            if os.path.lexists("/dev/disk/by-partlabel/ESP"):
-                os.remove("/dev/disk/by-partlabel/ESP")
-            os.symlink(self.installer.locate_esp(),
-                       "/dev/disk/by-partlabel/ESP")
-        except Exception as e:
-            self.set_errors("Failed to simulate ESP link: {}".format(e))
-            return False
-
-        # Proxy back to CBM
-        return self.apply_boot_loader()
-
     def get_ichild(self, root, child):
         t1 = os.path.join(root, child)
         if os.path.exists(t1) or not os.path.exists(root):
-- 
2.13.3

