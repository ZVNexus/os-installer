From d606e9ccb25ba94b599b6ddf469f21113b2dfe4e Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Sat, 11 Jun 2016 21:42:33 +0100
Subject: [PATCH 31/85] Address working theory on borky PATH

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 dist/os-installer-wrapper |  2 +-
 os_installer2/diskops.py  | 13 +++++++++----
 2 files changed, 10 insertions(+), 5 deletions(-)

diff --git a/dist/os-installer-wrapper b/dist/os-installer-wrapper
index 2fbef48..91ec0df 100644
--- a/dist/os-installer-wrapper
+++ b/dist/os-installer-wrapper
@@ -1,3 +1,3 @@
 #!/bin/bash
-pkexec /usr/bin/os-installer-gtk
+exec pkexec /usr/bin/os-installer-gtk
 
diff --git a/os_installer2/diskops.py b/os_installer2/diskops.py
index 1f74f07..beb3048 100644
--- a/os_installer2/diskops.py
+++ b/os_installer2/diskops.py
@@ -297,10 +297,13 @@ class DiskOpResizeOS(BaseDiskOp):
             if self.part.fileSystem.type == "ntfs":
                 newSz = str(int(self.their_size / 1000))
 
-                check_cmd = "ntfsresize -i -f --force -v {} {}".format(
+                prefix = "/usr/sbin"
+                check_cmd = "{}/ntfsresize -i -f --force -v {} {}".format(
+                    prefix,
                     "--no-action" if simulate else "", self.part.path)
 
-                resize_cmd = "ntfsresize {} -f -f -b --size {}k {}".format(
+                resize_cmd = "{}/ntfsresize {} -f -f -b --size {}k {}".format(
+                    prefix,
                     "--no-action" if simulate else "", newSz, self.part.path)
 
                 # Check first
@@ -341,20 +344,22 @@ class DiskOpResizeOS(BaseDiskOp):
                     self.new_part_off = self.part.geometry.end
                     return True
                 # check it first
-                cmd1 = "e2fsck -f {}".format(self.part.path)
+                cmd1 = "/sbin/e2fsck -f {}".format(self.part.path)
                 try:
                     subprocess.check_output(cmd1, shell=True,
                                             stderr=subprocess.STDOUT)
                 except Exception as ex:
+                    print(ex)
                     self.set_errors(ex)
                     return False
 
-                cmd = "resize2fs {} {}K".format(
+                cmd = "/sbin/resize2fs {} {}K".format(
                     self.part.path, str(int(self.their_size / 1024)))
                 try:
                     subprocess.check_output(cmd, shell=True,
                                             stderr=subprocess.STDOUT)
                 except Exception as ex:
+                    print(ex)
                     self.set_errors(ex)
                     return False
                 c = parted.Constraint(device=self.device)
-- 
2.8.3

